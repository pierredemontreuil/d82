<?php

use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Session\AccountProxyInterface;

function hello_help($route_name, \Drupal\Core\Routing\RouteMatchInterface $route_match) {
    switch ($route_name) {

        // Main  help for the hello module.
        case 'help.page.hello':
            return '<p>' . t('voici le module hello help').'</p>';
    }
}
function hello_cron() {
//    \Drupal::messenger()->addMessage(t('hello cron'));
    $purge_days_number = \drupal::config('hello.settings')->get('purge_days_number');
    if ($purge_days_number != '0') {
        $nombre_suppressions = \Drupal::database()->delete('hello_user_statistics')
            ->condition('time', REQUEST_TIME - $purge_days_number * (24 * 3600), '<')
            ->execute();
        \Drupal::messenger()->addMessage(t('@nombre_suppressions records have been deleted',
            ['@nombre_suppressions' => $nombre_suppressions]));
        }
    }

function hello_user_login(Drupal\user\UserInterface $account)
{

    \Drupal::messenger()->addMessage(t('Welcome %name !',
        // %name = jeton permet dans ce cas de contourner la traduction de la chaine
        // 3 type de jetons :
        // ! : le contenu de la variable est interprété
        // @ : le contenu de la variable est échappé
        // % : le contenu de la variable est échappé et la balise <em> est ajoutée.
        ['%name' => $account->getAccountName()]
    ));
// Enregistrement des conexions/deconnexion utilisateurs
    $roles = \Drupal::config('hello.settings')->get('user_statistics_roles');
    $user_roles = $account->getRoles();
    $diff = array_intersect($roles, $user_roles);
    if (count($diff) > '0') {
        \Drupal::database()->insert('hello_user_statistics')
            ->fields([
                'uid' => $account->id(),
                'action' => '1',
                'time' => REQUEST_TIME,
            ])
            ->execute();
    }
}
    /**
     * Implements hook_user_logout().
     * ;
     * *
     * @param AccountProxyInterface $account
     * @throws Exception
     */
    function hello_user_logout(AccountProxyInterface $account)
    {
        // Enregistrement des déconnexions utilisateurs.
        \Drupal::database()->insert('hello_user_statistics')
            ->fields([
                'uid' => $account->id(),
                'action' => '0',
                'time' => REQUEST_TIME,
            ])
            ->execute();
    }


    function hello_form_user_admin_settings_alter(array &$form, FormStateInterface $form_state)
    {
        $roles = \Drupal::entityTypeManager()->getStorage('user_role')->loadMultiple();
        unset($roles['anonymous']);
        foreach ($roles as $key => $role) {
            $options[$key] = $role->label();
        };
       ksm($form);

        $form['roles'] = [
            '#type' => 'checkboxes',
            '#options' => $options,
            '#default_value' => \Drupal::config('hello.settings')->get('user_statistics_roles'),
            '#weight' => '-100',
        ];
        $form['#submit'][] = 'hello_admin_user_settings_submit';
    }

    function hello_admin_user_settings_submit($form, FormStateInterface $form_state)
    {
        $config = \Drupal::configFactory()->getEditable('hello.settings');
        $config->set('user_statistics_roles', $form_state->getValue('roles'))
            ->save();
    }

    function hello_theme($existing, $type, $theme, $path)
    {
        return [
            'hello' => array(
                'template' => 'hello-theme',
                'variables' => array('data' => NULL),
            ),
        ];
    }

